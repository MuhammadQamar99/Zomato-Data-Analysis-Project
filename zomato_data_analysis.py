# -*- coding: utf-8 -*-
"""Zomato Data Analysis

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/#fileId=https%3A//storage.googleapis.com/kaggle-colab-exported-notebooks/zomato-data-analysis-8755b80b-903a-4e80-a2b1-94edfbda8fca.ipynb%3FX-Goog-Algorithm%3DGOOG4-RSA-SHA256%26X-Goog-Credential%3Dgcp-kaggle-com%2540kaggle-161607.iam.gserviceaccount.com/20250104/auto/storage/goog4_request%26X-Goog-Date%3D20250104T144834Z%26X-Goog-Expires%3D259200%26X-Goog-SignedHeaders%3Dhost%26X-Goog-Signature%3D4ebee01286e6f97bf9980f6fbfcfd43e183911468496c065ac8f79f339de9da5a88b96a44a517119e82e9731766dc1c31a228f749407cf53aad6bb72e825861ab7e8f19ba81237805a0ca4e2f950772c6b3cb2e09580ceddf3be81a953ff6b46f81653ad5dceed8a75359347480a648d6ce5b13687f00cbe6b7debce871896b7c3b77f00eba0954c19c10ed9455aecac08cd484468eb8dc52f52a88868527908fcc1106b744835761d57bff4a55b0fa876f63af0f91873eca26c99859fc4447cc98da735d458f257e84368f7bf8d59753800788acde8ab6c672f161affaa2b5ea01d535d21ed209abc671ac2e54683c75008d30b3630f6c10df107527c6719df
"""

# IMPORTANT: SOME KAGGLE DATA SOURCES ARE PRIVATE
# RUN THIS CELL IN ORDER TO IMPORT YOUR KAGGLE DATA SOURCES.
import kagglehub
kagglehub.login()

# IMPORTANT: RUN THIS CELL IN ORDER TO IMPORT YOUR KAGGLE DATA SOURCES,
# THEN FEEL FREE TO DELETE THIS CELL.
# NOTE: THIS NOTEBOOK ENVIRONMENT DIFFERS FROM KAGGLE'S PYTHON
# ENVIRONMENT SO THERE MAY BE MISSING LIBRARIES USED BY YOUR
# NOTEBOOK.

muhammadibnqamar_zomato_dataset_path = kagglehub.dataset_download('muhammadibnqamar/zomato-dataset')

print('Data source import complete.')

"""# Importing Libraries"""

# important Libreries
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

"""# Create a DataFrame"""

# Create a DataFrame
dataframe = pd.read_csv("/kaggle/input/zomato-dataset/Zomato data .csv")
dataframe.head()

"""# # Convert the data of column --rate--"""

# Convert the data of column --rate--
def handleRate(value):
     value = str(value).split("/")
     value = value[0]
     return float(value)

dataframe["rate"] = dataframe["rate"].apply(handleRate)

dataframe.head()

"""# Check for Null values"""

dataframe.info()

"""# Type of Resturant"""

# Find the type of restaurent for data

dataframe.head()

sns.countplot(x = dataframe["listed_in(type)"])
plt.xlabel("Type of resturant")

"""Conclusion - Majority of customers falls in dinning category

# Maximum Votes
"""

dataframe.head()

groupdata = dataframe.groupby("listed_in(type)")["votes"].sum()
result = pd.DataFrame( {"Votes" : groupdata} )
plt.plot(result, c ="green", marker = "o" )
plt.xlabel("Type of Resturant" , c = "red", size=20)
plt.ylabel("Votes" , c = "red" , size=20)

"""Conclusion - Dining returants have maximum votes

# Rating Distribution
"""

dataframe.head()

plt.hist(dataframe["rate"] , bins = 5)
plt.title("Rating Distribution")
plt.show()

"""Conclusion - The majority resturants recieve 3.5 to 4 ratings

# Average Order Spending
"""

dataframe.head()

coupledata = dataframe["approx_cost(for two people)"]
sns.countplot(x = coupledata)

"""Conclusion - approximate spending per order as a couple is 300

# Online vs Offline ratings
"""

dataframe.head()

plt.figure(figsize = (6,6))
sns.boxplot(x = "online_order", y = "rate", data = dataframe)

"""Conclusion - Online rating is more than offline"""

pivot_table = dataframe.pivot_table(index="listed_in(type)" , columns = "online_order", aggfunc="size" , fill_value = 0 )
sns.heatmap(pivot_table , annot = True , cmap = "YlGnBu" , fmt="d")
plt.title("Heatmap")
plt.xlabel("Online Order")
plt.ylabel("listed_in(type)")
plt.show()

"""Conclusion - Dining resturants recieves most offline customers while cafes online"""

dataframe.to_csv("Zomato Data Analysis.csv", index=False)
print("Dataframe is saved")

